import pygame
from pygame.locals import *
import Image
import pytesseract
import serial
import time

def detect_text(path):
    pytesseract.pytesseract.tesseract_cmd = ''
    return pytesseract.image_to_string(Image.open(path))

'''
char dict for reference
    chars = {
    'A':['01110', '01010', '01110', '01010', '01010'],
    'B':['11100', '10100', '11100', '10100', '11100'],
    'C':['11111', '10000', '10000', '10000', '11111'],
    'D':['11110', '10001', '10001', '10001', '11110'],
    'E':['11110', '10000', '11110', '10000', '11110'],
    'F':['11110', '10000', '11110', '10000', '10000'],
    'G':['11111', '10000', '10011', '10001', '11111'],
    'H':['10001', '10001', '11111', '10001', '10001'],
    'I':['11111', '00100', '00100', '00100', '11111'],
    'J':['11111', '00100', '00100', '00100', '11100'],
    'K':['10010', '10100', '11000', '10100', '10010'],
    'L':['10000', '10000', '10000', '10000', '11111'],
    'M':['11111', '10101', '10101', '10101', '10001'],
    'N':['11111', '10001', '10001', '10001', '10001'],
    'O':['11111', '10001', '10001', '10001', '11111'],
    'P':['11111', '10001', '11111', '10000', '10000'],
    'Q':['11111', '10001', '10001', '11111', '00100'],
    'R':['11111', '10001', '11111', '11000', '10100'],
    'S':['11111', '10000', '11111', '00001', '11111'],
    'T':['11111', '00100', '00100', '00100', '00100'],
    'U':['10001', '10001', '10001', '10001', '11111'],
    'V':['10001', '10001', '01010', '01010', '00100'],
    'W':['10001', '10001', '10101', '01010', '01010'],
    'X':['10001', '01010', '00100', '01010', '10001'],
    'Y':['10001', '01010', '00100', '00100', '00100'],
    'Z':['11111', '00010', '00100', '01000', '11111']
    }
'''

def getCharBytes(ch):
    #dict of hex strings of coords of 0th layer
    #2-dig coords
    coords = []
	dict={
	'A': [8, 16, 24, 48, 64, 88, 96, 104, 128, 144, 168, 184],
	'B': [0, 8, 16, 40, 56, 80, 88, 96, 120, 136, 160, 168, 176],
	'C': [0, 8, 16, 24, 32, 40, 80, 120, 160, 168, 176, 184, 192],
	'D': [0, 8, 16, 24, 40, 72, 80, 112, 120, 152, 160, 168, 176, 184],
	'E': [0, 8, 16, 24, 40, 80, 88, 96, 104, 120, 160, 168, 176, 184],
	'F': [0, 8, 16, 24, 40, 80, 88, 96, 104, 120, 160],
	'G': [0, 8, 16, 24, 32, 40, 80, 104, 112, 120, 152, 160, 168, 176, 184, 192],
	'H': [0, 32, 40, 72, 80, 88, 96, 104, 112, 120, 152, 160, 192],
	'I': [0, 8, 16, 24, 32, 56, 96, 136, 160, 168, 176, 184, 192],
	'J': [0, 8, 16, 24, 32, 56, 96, 136, 160, 168, 176],
	'K': [0, 24, 40, 56, 80, 88, 120, 136, 160, 184],
	'L': [0, 40, 80, 120, 160, 168, 176, 184, 192],
	'M': [0, 8, 16, 24, 32, 40, 56, 72, 80, 96, 112, 120, 136, 152, 160, 192],
	'N': [0, 8, 16, 24, 32, 40, 72, 80, 112, 120, 152, 160, 192],
	'O': [0, 8, 16, 24, 32, 40, 72, 80, 112, 120, 152, 160, 168, 176, 184, 192],
	'P': [0, 8, 16, 24, 32, 40, 72, 80, 88, 96, 104, 112, 120, 160],
	'Q': [0, 8, 16, 24, 32, 40, 72, 80, 112, 120, 128, 136, 144, 152, 176],
	'R': [0, 8, 16, 24, 32, 40, 72, 80, 88, 96, 104, 112, 120, 128, 160, 176],
	'S': [0, 8, 16, 24, 32, 40, 80, 88, 96, 104, 112, 152, 160, 168, 176, 184, 192],
	'T': [0, 8, 16, 24, 32, 56, 96, 136, 176],
	'U': [0, 32, 40, 72, 80, 112, 120, 152, 160, 168, 176, 184, 192],
	'V': [0, 32, 40, 72, 88, 104, 128, 144, 176],
	'W': [0, 32, 40, 72, 80, 96, 112, 128, 144, 168, 184],
	'X': [0, 32, 48, 64, 96, 128, 144, 160, 192],
	'Y': [0, 32, 48, 64, 96, 136, 176],
	'Z': [0, 8, 16, 24, 32, 64, 96, 128, 160, 168, 176, 184, 192]
    }
    if(ch in dict.keys()):
        coord = dict[ch]
        for i in range(5):
            for j in coord:
                coords.append(j+i)
        return coords
    else:
        return []

def boolString(bytes):
    return list(map(lambda x : list(map(lambda y: y == '1', bin(x)[2:])), bytes))

pygame.init()
cameras = list_cameras()
if(cameras):
  cam = Camera(cameras[0], cameras[0].get_size())
cam.start()

while(True):
    img = cam.get_image()
    pygame.image.save(img, 'image.jpg')
    detected = detect_text('image.jpg')
    print detected
