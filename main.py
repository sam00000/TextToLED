import pygame
from pygame.locals import *
import Image
import pytesseract

def detect_text(path):
    pytesseract.pytesseract.tesseract_cmd = ''
    return pytesseract.image_to_string(Image.open(path))

def getCharBin(ch):
    chars = {
    'A':['01110', '01010', '01110', '01010', '01010'],
    'B':['11100', '10100', '11100', '10100', '11100'],
    'C':['11111', '10000', '10000', '10000', '11111'],
    'D':['11110', '10001', '10001', '10001', '11110'],
    'E':['11110', '10000', '11110', '10000', '11110'],
    'F':['11110', '10000', '11110', '10000', '10000'],
    'G':['11111', '10000', '10011', '10001', '11111'],
    'H':['10001', '10001', '11111', '10001', '10001'],
    'I':['11111', '00100', '00100', '00100', '11111'],
    'J':['11111', '00100', '00100', '00100', '11100'],
    'K':['10010', '10100', '11000', '10100', '10010'],
    'L':['10000', '10000', '10000', '10000', '11111'],
    'M':['11111', '10101', '10101', '10101', '10001'],
    'N':['11111', '10001', '10001', '10001', '10001'],
    'O':['11111', '10001', '10001', '10001', '11111'],
    'P':['11111', '10001', '11111', '10000', '10000'],
    'Q':['11111', '10001', '10001', '11111', '00100'],
    'R':['11111', '10001', '11111', '11000', '10100'],
    'S':['11111', '10000', '11111', '00001', '11111'],
    'T':['11111', '00100', '00100', '00100', '00100'],
    'U':['10001', '10001', '10001', '10001', '11111'],
    'V':['10001', '10001', '01010', '01010', '00100'],
    'W':['10001', '10001', '10001', '01010', '01010'],
    'X':['10001', '01010', '00100', '01010', '10001'],
    'Y':['10001', '01010', '00100', '00100', '00100'],
    'Z':['11111', '00010', '00100', '01000', '11111']
    }
    if(ch in chars.keys()):
        return chars[ch]
    else:
        return ['00000', '00000', '00000', '00000', '00000']

pygame.init()
cameras = list_cameras()
if(cameras):
  cam = Camera(cameras[0], cameras[0].get_size())
cam.start()

while(True):
    img = cam.get_image()
    pygame.image.save(img, 'image.jpg')
    detected = detect_text('image.jpg')
    print detected
